@page "/weather/detail/{id:int}"
@using MudMvvMKitApp.ViewModels
@inherits MudMvvMKit.ViewComponents.MudDetailViewComponent<int, WeatherForecast, IWeatherDetailViewModel>

<MudContainer>
    <MudForm Model="@ViewModel.RetrievedItem" @ref="@Form" Validation="@(_validator.ValidateValue)" ValidationDelay="0">
        <MudPaper>
            <MudText>@ViewModel.RetrievedItem.Id</MudText>
            <MudNumericField T="int" Label="TemperatureC" @bind-Value="ViewModel.RetrievedItem.TemperatureC" For="@(() =>ViewModel.RetrievedItem.TemperatureC)" Immediate="true"/>
        </MudPaper>
    </MudForm>
    <MudButton OnClick="this.Submit">Submit</MudButton>
    <MudButton OnClick="this.Cancel">Go Back</MudButton>
</MudContainer>

@code {
    [Parameter] public int Id { get; set; }

    WeatherForecastValidator _validator = new WeatherForecastValidator();

    protected override void OnViewInitialized()
    {
        this.ViewModel.Initialize();
        this.ViewModel.Parameter = Id;
    }

    protected override async Task OnViewAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            await this.ViewModel.OnRetrieve();
            await InvokeAsync(StateHasChanged);
        }
    }
}